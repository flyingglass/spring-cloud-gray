spring:
  application:
    name: api-Gateway
  rabbitmq:
    addresses: 127.0.0.1:5672
    username: admin
    password: admin
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
    stream:
      bindings:
        GrayEventInput:
          group: zuul
          destination: gray_event
          consumer:
            concurrency: 1 #并发数
        #            max-attempts: 1
      #        GrayEventOutput:
      #          destination: gray-event
      rabbit:
        bindings:
          GrayEventInput:
            consumer:
              maxConcurrency: 1 #并发数
              #              prefetch: 1 #从mq一次获取消息的数量
              #              requeueRejected: true #spring cloud stream 如果出现异常， 是否需要重新投递消息， false表示丢弃。  也有相应的Exception， true-MessageRejectedWhileStoppingException false-AmqpRejectAndDontRequeueException
              #              auto-bind-dlq: true
              acknowledgeMode: AUTO
server:
  port: 20301
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:20001/eureka/
    registry-fetch-interval-seconds: 5
  instance:
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 15
#    initial-status: starting

ribbon:
  #    ReadTimeout: 30000
  #    ConnectTimeout: 30000
  eureka:
    enabled: true
zuul:
  prefix: /gateway #为zuul设置一个公共的前缀
  ribbonIsolationStrategy: THREAD
#  routes:
#    eureka-client: #随便定义，当不存在serviceId时，默认该值为serviceId（就是注册服务的名称，属性spring.application.name）
#      path: /client/** #匹配/techouse/usersystem/** 均路由到cloud-client
#      serviceId: eureka-client #指定路由到的serviceId
hystrix:
  threadpool:
    default:
      coreSize: 100
#  command:
#    service-a:
#      circuitBreaker:
#        enabled: true
#        forceOpen: true
gray:
  enabled: true
  hystrix:
    enabled: true
  server:
    url: http://localhost:20202
    loadbalanced: false
  client:
    runenv: web
    serviceUpdateIntervalTimerInMs: 10000
    serviceInitializeDelayTimeInMs: 10000
  holdout-server:
    enabled: true
    services:
      "service-a": starting
  request:
    track:
      definitionsUpdateIntervalTimerInMs: 10000
      definitionsInitializeDelayTimeInMs: 10000
      web:
        track-definitions:
          #          - name: HttpIP
          #          - name: HttpMethod
          #          - name: HttpURI
          #          - name: HttpReceive
#          - name: HttpHeader
          - name: HttpParameter
            value: version,test
        path-patterns: /*
  load:
    enabled: true
#    gray-instances:
#      - serviceId: service-a
#        instance-id: service-a:20103
#        policy-definitions:
#          - policyId: policy-1
#            alias: policy-1
#            list:
#              - id: decision-1
#                name: HttpHeader
#                infos:
#                  compare-mode: EQUAL
#                  header: _graytrack_header__test
#                  values: true
#                  _graytrack_heander__test: true

